from typing import List

class Solution:
    def replaceElements(self, arr: List[int]) -> List[int]:
        n = len(arr)
        max_right = -1  # Initialize the max_right with -1 for the last element
        
        # Traverse the array from right to left
        for i in range(n - 1, -1, -1):
            new_val = max_right  # Store the max value for the current index
            max_right = max(max_right, arr[i])  # Update max_right with the maximum value seen
            arr[i] = new_val  # Replace the current element with the max_right
        
        return arr

'''
### Approach:
1. **Initialize `max_right` as -1**: 
   - The last element will always be replaced with `-1`, so we start with it.
   
2. **Iterate from right to left**:
   - Store `max_right` in a temporary variable before updating.
   - Update `max_right` to be the maximum of its current value and the current element.
   - Replace the current element with the previous `max_right`.

3. **Return the modified array**.

### Complexity Analysis:
- **Time Complexity**: **O(n)** 
  - We traverse the array only once.
- **Space Complexity**: **O(1)** 
  - No extra space is used apart from the input array.

'''
