class Solution:
    def convertDateToBinary(self, date: str) -> str:
        # Split the date into year, month, and day
        year, month, day = date.split("-")

        # Convert each part to binary without leading zeroes
        year_binary = bin(int(year))[2:]
        month_binary = bin(int(month))[2:]
        day_binary = bin(int(day))[2:]

        # Combine the binary representations with '-' as separator
        return f"{year_binary}-{month_binary}-{day_binary}"

'''
Approach:
1. Parse the input string `date` to extract the year, month, and day using `split("-")`.
2. Convert each part to its binary representation using `bin()` and remove the prefix `0b` with slicing `[2:]`.
3. Concatenate the binary representations of year, month, and day with `-` as the separator.
4. Return the formatted binary string.

Time Complexity:
- O(1), as the conversion of year, month, and day to binary involves constant time operations.

Space Complexity:
- O(1), as the solution uses a constant amount of space for binary conversion.
'''
