class Solution:
    def countSubarrays(self, nums: List[int]) -> int:
        count = 0
        for i in range(len(nums) - 2):
            if nums[i] + nums[i+2] == nums[i+1] / 2:
                count += 1
        return count

'''
Approach:
1. Loop through the array from index 0 to len(nums) - 3.
2. For each triplet (nums[i], nums[i+1], nums[i+2]):
   - Check if nums[i] + nums[i+2] is equal to half of nums[i+1].
   - If yes, increment the count.
3. Return the final count.

Time Complexity: O(n), where n is the length of nums
Space Complexity: O(1), only a few variables are used
'''
