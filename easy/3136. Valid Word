class Solution:
    def isValid(self, word: str) -> bool:
        if len(word) < 3:
            return False
            
        has_vowel = False
        has_consonant = False
        
        vowels = set('aeiouAEIOU')
        
        for char in word:
            if not (char.isalnum()):
                return False
            if char.isalpha():
                if char in vowels:
                    has_vowel = True
                else:
                    has_consonant = True
                    
        return has_vowel and has_consonant
        
'''
Approach: 
1. Check if the word length is at least 3 characters. If not, return False.
2. Initialize flags to track the presence of vowels and consonants.
3. Define a set of vowels (both lowercase and uppercase).
4. Iterate through each character in the word:
   - If the character is not alphanumeric (i.e., contains '@', '#', or '$'), return False.
   - If the character is a letter, check if it's a vowel or consonant and update the respective flags.
5. Return True only if both a vowel and a consonant are found, False otherwise.

Time Complexity: O(n), where n is the length of the input word. We iterate through the word once, and each operation (checking alphanumeric, vowel, or consonant) is O(1).
Space Complexity: O(1), as we use a fixed-size set of vowels and a constant amount of additional variables regardless of input size.
'''
